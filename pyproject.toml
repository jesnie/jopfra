[tool.poetry]
name = "jopfra"
version = "0.1.0"
description = "A python package for removing stack frames from stack traces."
authors = ["Jesper Nielsen <jespernielsen1982+jopfra@gmail.com>"]
license = "MIT"
readme = "README.md"

homepage = "https://github.com/jesnie/jopfra"
repository = "https://github.com/jesnie/jopfra"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
GitPython = "<4,>=2.1"
check_shapes = "<2,>=0.2.0"
matplotlib = "<4,>=3.6"
numpy = "<2,>=1.24"
pandas = "<3,>=1.5"
python = "<4,>=3.10"
torch = "<3,>=1.13"
typedpath = "<0.2,>=0.1.0"


[tool.poetry.group.dev.dependencies]
black = "<24.3,>=24.2"
compreq = "<0.3.1,>=0.3.0"
isort = "<5.14,>=5.13"
mypy = "<1.9,>=1.8"
pandas-stubs = "<3,>=1.5"
pylint = "<3.2,>=3.1"
pytest = "<8.1,>=8.0"
taskipy = "<1.13,>=1.12"
tomlkit = "<0.12.5,>=0.12.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.isort]
py_version = 310
profile = "black"

[tool.black]
target-version = ["py310"]
line-length = 100

[tool.mypy]
python_version = "3.10"
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = [
    "_testcapi.*",
]
ignore_missing_imports = true

[tool.pylint.messages_control]
max-line-length = 100
disable = [
  "duplicate-code",
  "fixme",
  "global-statement",
  "invalid-name",
  "invalid-str-returned",
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "no-else-return",
  "no-member",
  "too-few-public-methods",
  "too-many-boolean-expressions",
  "too-many-branches",
  "too-many-lines",
  "too-many-locals",
  "too-many-statements",
  "unhashable-member",
  "unsubscriptable-object",
  "unused-argument",
  "use-implicit-booleaness-not-comparison",
]


[tool.taskipy.tasks]
isort = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX isort XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    isort jopfra tests set_version.py requirements.py
"""
isort_check = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX isort XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    isort --check-only jopfra tests set_version.py requirements.py
"""
black = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX black XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    black jopfra tests set_version.py requirements.py
"""
black_check = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX black XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    black --check jopfra tests set_version.py requirements.py
"""
mypy = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX mypy XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    mypy jopfra tests set_version.py requirements.py
"""
pylint = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX pylint XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    pylint jopfra tests set_version.py requirements.py
"""
pytest = """
    echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX pytest XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    pytest tests
"""

format = "task isort && task black"
format_check = "task isort_check && task black_check"
lint = "task format_check && task mypy && task pylint"
test = "task lint && task pytest"
format_and_lint = "task format && task lint"
format_and_test = "task format && task test"
